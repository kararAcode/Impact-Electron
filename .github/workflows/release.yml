name: Build Electron App on Tag

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Extract version from tag
        id: extract_version
        run: echo "::set-output name=VERSION::${GITHUB_REF#refs/tags/}"

      - name: Update version in package.json
        run: |
          echo "Updating package.json version to ${GITHUB_REF#refs/tags/}"
          npm version ${GITHUB_REF#refs/tags/} --no-git-tag-version

      - name: Install dependencies
        run: npm install

      - name: Build Electron App
        run: npm run build

      - name: Package Electron App
        run: npm run dist

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: production-artifacts
          path: |
            build/builder-debug.yml
            build/builder-effective-config.yaml
            build/impact-electron.Setup.${{ steps.extract_version.outputs.VERSION }}.exe
            build/impact-electron.Setup.${{ steps.extract_version.outputs.VERSION }}.exe.blockmap
            build/latest.yml

      - name: Archive source code as zip
        run: git archive -o source-code.zip HEAD
        uses: actions/upload-artifact@v3
        with:
          name: source-code-zip
          path: source-code.zip

      - name: Archive source code as tar.gz
        run: git archive -o source-code.tar.gz HEAD
        uses: actions/upload-artifact@v3
        with:
          name: source-code-tar-gz
          path: source-code.tar.gz
